[
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephOSDDiskUnavailable",
      "text": "%ceph-storage-plugin~Troubleshoot%",
      "action": {
        "$codeRef": "alert.getDiskAlertActionPath"
      }
    }
  },
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephOSDDiskNotResponding",
      "text": "%ceph-storage-plugin~Troubleshoot%",
      "action": {
        "$codeRef": "alert.getDiskAlertActionPath"
      }
    }
  },
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephClusterNearFull",
      "text": "%ceph-storage-plugin~Add Capacity%",
      "action": {
        "$codeRef": "alert.launchClusterExpansionModal"
      }
    },
    "flags": {
      "required": ["OCS"]
    }
  },
  {
    "type": "console.alert-action",
    "properties": {
      "alert": "CephClusterCriticallyFull",
      "text": "%ceph-storage-plugin~Add Capacity%",
      "action": {
        "$codeRef": "alert.launchClusterExpansionModal"
      }
    },
    "flags": {
      "required": ["OCS"]
    }
  },
  {
    "type": "console.storage-provider",
    "properties": {
      "name": "%ceph-storage-plugin~ObjectBucketClaim%",
      "Component": {
        "$codeRef": "storageProvider"
      }
    },
    "flags": {
      "required": ["OCS"]
    }
  },
  {
    "type": "console.navigation/resource-cluster",
    "properties": {
      "id": "objectbuckets",
      "section": "storage",
      "insertAfter": "volumesnapshotcontents",
      "name": "%ceph-storage-plugin~Object Buckets%",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucket",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["MCG"],
      "disallowed": ["MCG_RESOURCE"]
    }
  },
  /* Activates when RGW is present without MCG */
  {
    "type": "console.navigation/resource-cluster",
    "properties": {
      "id": "objectbuckets",
      "section": "storage",
      "insertAfter": "volumesnapshotcontents",
      "name": "%ceph-storage-plugin~Object Buckets%",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucket",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["RGW"],
      "disallowed": ["MCG", "MCG_RESOURCE"]
    }
  },
  {
    "type": "console.navigation/resource-ns",
    "properties": {
      "id": "objectbucketclaims",
      "section": "storage",
      "name": "%ceph-storage-plugin~Object Bucket Claims%",
      "insertAfter": "volumesnapshotcontents",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucketClaim",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["MCG"],
      "disallowed": ["MCG_RESOURCE"]
    }
  },
  /* Activates when RGW is present without MCG */
  {
    "type": "console.navigation/resource-ns",
    "properties": {
      "id": "objectbucketclaims",
      "section": "storage",
      "insertAfter": "volumesnapshotcontents",
      "name": "%ceph-storage-plugin~Object Bucket Claims%",
      "model": {
        "group": "objectbucket.io",
        "kind": "ObjectBucketClaim",
        "version": "v1alpha1"
      }
    },
    "flags": {
      "required": ["RGW"],
      "disallowed": ["MCG", "MCG_RESOURCE"]
    }
  },
  {
    "type": "console.navigation/href",
    "properties": {
      "id": "ocsdashboards",
      "insertBefore": "persistentvolumes",
      "section": "storage",
      "name": "%ceph-storage-plugin~Overview%",
      "href": "/ocs-dashboards"
    },
    "flags": {
      "required": ["OCS"],
      "disallowed": ["ODF_MANAGED", "ODF_MODEL"]
    }
  },
  {
    "type": "console.navigation/href",
    "properties": {
      "id": "ocsdashboards",
      "insertBefore": "persistentvolumes",
      "section": "storage",
      "name": "%ceph-storage-plugin~Overview%",
      "href": "/ocs-dashboards"
    },
    "flags": {
      "required": ["MCG"],
      "disallowed": ["OCS", "ODF_MODEL"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "exact": true,
      "path": "/odf/system/ocs.openshift.io~v1~StorageCluster/:systemName/ceph.rook.io~v1~CephBlockPool/create/~new",
      "component": {
        "$codeRef": "blockPoolCreatePage.default"
      }
    },
    "flags": {
      "required": ["OCS"],
      "disallowed": ["BLOCK_POOL"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "exact": false,
      "path": "/odf/system/ocs.openshift.io~v1~StorageCluster/:systemName/ceph.rook.io~v1~CephBlockPool/:poolName",
      "component": {
        "$codeRef": "blockPoolDetailsPage.default"
      }
    },
    "flags": {
      "required": ["OCS"],
      "disallowed": ["BLOCK_POOL"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~BackingStore/create/~new",
      "exact": true,
      "component": {
        "$codeRef": "bsCreate.default"
      }
    },
    "flags": {
      "disallowed": ["MCG_RESOURCE"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~NamespaceStore/create/~new",
      "exact": true,
      "component": {
        "$codeRef": "nssCreate.default"
      }
    },
    "flags": {
      "disallowed": ["MCG_RESOURCE"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/noobaa.io~v1alpha1~BucketClass/create/~new",
      "exact": true,
      "component": {
        "$codeRef": "bcCreate.default"
      }
    },
    "flags": {
      "disallowed": ["MCG_RESOURCE"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/resource/:resourceKind/:resourceName",
      "exact": false,
      "component": {
        "$codeRef": "resourceDetailsPage.GenericDetailsPage"
      }
    },
    "flags": {
      "disallowed": ["MCG_RESOURCE"]
    }
  },
  {
    "type": "console.page/route",
    "properties": {
      "path": "/odf/system/ocs.openshift.io~v1~StorageCluster/:systemName",
      "exact": false,
      "component": {
        "$codeRef": "odfSystemDashboard.default"
      }
    },
    "flags": {
      "disallowed": ["ODF_DASHBOARD"]
    }
  },
  {
    "type": "console.action/provider",
    "properties": {
      "contextId": "csv-actions",
      "provider": { "$codeRef": "actions.useCsvActions" }
    },
    "flags": {
      "disallowed": ["COMMON_FLAG"]
    }
  },
  {
    "type": "console.storage-class/provisioner",
    "properties": {
      "CSI": {
        "title": "Ceph RBD",
        "provisioner": "rbd.csi.ceph.com",
        "allowVolumeExpansion": { "$codeRef": "storageProvisioners.getTrue" },
        "parameters": {
          "clusterID": {
            "name": "%ceph-storage-plugin~Cluster ID%",
            "hintText": "%ceph-storage-plugin~The namespace where Ceph is deployed%",
            "value": "openshift-storage",
            "visible": false
          },
          "pool": {
            "name": "%ceph-storage-plugin~Storage Pool%",
            "hintText": "%ceph-storage-plugin~Storage pool into which volume data shall be stored%",
            "required": true,
            "visible": true,
            "Component": { "$codeRef": "storageProvisionerComponents.PoolResourceComponent" }
          },
          "imageFormat": {
            "name": "%ceph-storage-plugin~Image Format%",
            "hintText": "%ceph-storage-plugin~RBD image format. Defaults to '2'%",
            "value": "2",
            "visible": false
          },
          "imageFeatures": {
            "name": "%ceph-storage-plugin~Image Features%",
            "hintText": "%ceph-storage-plugin~Ceph RBD image features%",
            "value": "layering,deep-flatten,exclusive-lock,object-map,fast-diff",
            "visible": false
          },
          "csi.storage.k8s.io/provisioner-secret-name": {
            "name": "%ceph-storage-plugin~Provisioner Secret Name%",
            "hintText": "%ceph-storage-plugin~The name of provisioner secret%",
            "value": "rook-csi-rbd-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/provisioner-secret-namespace": {
            "name": "%ceph-storage-plugin~Provisioner Secret Namespace%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-name": {
            "name": "%ceph-storage-plugin~Node Stage Secret Name%",
            "hintText": "%ceph-storage-plugin~The name of Node Stage secret%",
            "value": "rook-csi-rbd-node",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-namespace": {
            "name": "%ceph-storage-plugin~Node Stage Secret Namespace%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/fstype": {
            "name": "%ceph-storage-plugin~Filesystem Type%",
            "hintText": "%ceph-storage-plugin~Ceph RBD filesystem type. Default set to ext4%",
            "value": "ext4",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-name": {
            "name": "%ceph-storage-plugin~Expand Secret Name%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "rook-csi-rbd-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-namespace": {
            "name": "%ceph-storage-plugin~Expand Secret Namespace%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "openshift-storage",
            "visible": false
          },
          "encrypted": {
            "name": "%ceph-storage-plugin~Enable Encryption%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "Component": { "$codeRef": "storageProvisionerComponents.StorageClassEncryption" },
            "visible": true
          },
          "encryptionKMSID": {
            "name": "%ceph-storage-plugin~Encryption ID%",
            "hintText": "%ceph-storage-plugin~A unique ID matching KMS ConfigMap%",
            "Component": { "$codeRef": "storageProvisionerComponents.StorageClassEncryptionKMSID" },
            "visible": { "$codeRef": "storageProvisioners.isEncryptionKMSIdVisibleOrRequired" },
            "required": { "$codeRef": "storageProvisioners.isEncryptionKMSIdVisibleOrRequired" }
          },
          "thickProvision": {
            "name": "%ceph-storage-plugin~Enable Thick Provisioning%",
            "hintText": "%ceph-storage-plugin~Volumes will allocate the requested capacity upon volume creation%",
            "Component": { "$codeRef": "thickProvisioner.ThickProvision" },
            "visible": true
          }
        }
      }
    },
    "flags": {
      "required": ["OCS"]
    }
  },
  {
    "type": "console.storage-class/provisioner",
    "properties": {
      "CSI": {
        "title": "%ceph-storage-plugin~Ceph FS%",
        "provisioner": "%ceph-storage-plugin~cephfs.csi.ceph.com",
        "allowVolumeExpansion": { "$codeRef": "storageProvisioners.getTrue" },
        "parameters": {
          "clusterID": {
            "name": "%ceph-storage-plugin~Cluster ID%",
            "hintText": "%ceph-storage-plugin~The namespace where Ceph is deployed%",
            "value": "openshift-storage",
            "visible": false
          },
          "fsName": {
            "name": "%ceph-storage-plugin~Filesystem Name%",
            "hintText": "%ceph-storage-plugin~CephFS filesystem name into which the volume shall be created%",
            "required": { "$codeRef": "storageProvisioners.getTrue" },
            "visible": { "$codeRef": "storageProvisioners.getTrue" },
            "Component": { "$codeRef": "storageProvisionerComponents.CephFsNameComponent" }
          },
          "csi.storage.k8s.io/provisioner-secret-name": {
            "name": "%ceph-storage-plugin~Provisioner Secret Name%",
            "hintText": "%ceph-storage-plugin~The name of provisioner secret%",
            "value": "rook-csi-cephfs-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/provisioner-secret-namespace": {
            "name": "%ceph-storage-plugin~Provisioner Secret Namespace%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-name": {
            "name": "%ceph-storage-plugin~Node Stage Secret Name%",
            "hintText": "%ceph-storage-plugin~The name of Node Stage secret%",
            "value": "%ceph-storage-plugin~rook-csi-cephfs-node",
            "visible": false
          },
          "csi.storage.k8s.io/node-stage-secret-namespace": {
            "name": "%ceph-storage-plugin~Node Stage Secret Namespace%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "openshift-storage",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-name": {
            "name": "%ceph-storage-plugin~Expand Secret Name%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "%ceph-storage-plugin~rook-csi-cephfs-provisioner",
            "visible": false
          },
          "csi.storage.k8s.io/controller-expand-secret-namespace": {
            "name": "%ceph-storage-plugin~Expand Secret Namespace%",
            "hintText": "%ceph-storage-plugin~The namespace where provisioner secret is created%",
            "value": "%ceph-storage-plugin~openshift-storage",
            "visible": false
          }
        }
      }
    },
    "flags": {
      "required": ["OCS"]
    }
  }
]

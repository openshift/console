[
  {
    "type": "console.perspective",
    "properties": {
      "id": "admin",
      "default": true,
      "name": "%console-app~Administrator%",
      "icon": { "$codeRef": "perspective.icon" },
      "landingPageURL": { "$codeRef": "perspective.getLandingPageURL" },
      "importRedirectURL": { "$codeRef": "perspective.getImportRedirectURL" }
    }
  },
  {
    "type": "console.flag/model",
    "properties": {
      "flag": "DEVWORKSPACE",
      "model": {
        "group": "workspace.devfile.io",
        "version": "v1alpha1",
        "kind": "DevWorkspace"
      }
    }
  },
  {
    "type": "console.flag/model",
    "properties": {
      "flag": "v1alpha2DEVWORKSPACE",
      "model": {
        "group": "workspace.devfile.io",
        "version": "v1alpha2",
        "kind": "DevWorkspace"
      }
    }
  },
  {
    "type": "console.context-provider",
    "properties": {
      "provider": { "$codeRef": "tourContext.TourContextProvider" },
      "useValueHook": { "$codeRef": "tourContext.useTourValuesForContext" }
    }
  },
  {
    "type": "console.context-provider",
    "properties": {
      "provider": { "$codeRef": "quickStartContext.QuickStartContextProvider" },
      "useValueHook": { "$codeRef": "quickStartContext.useValuesForQuickStartContext" }
    }
  },
  {
    "type": "console.context-provider",
    "properties": {
      "provider": { "$codeRef": "fileUploadContext.FileUploadContextProvider" },
      "useValueHook": { "$codeRef": "fileUploadContext.useValuesFileUploadContext" }
    }
  },
  {
    "type": "console.redux-reducer",
    "properties": {
      "scope": "console",
      "reducer": { "$codeRef": "reduxReducer" }
    }
  },
  {
    "type": "console.navigation/resource-cluster",
    "properties": {
      "id": "volumesnapshots",
      "section": "storage",
      "name": "%console-app~VolumeSnapshotContents%",
      "insertBefore": "deployments",
      "model": {
        "group": "snapshot.storage.k8s.io",
        "kind": "VolumeSnapshotContent",
        "version": "v1"
      }
    },
    "flags": {
      "required": ["CAN_LIST_VSC"]
    }
  },
  {
    "type": "console.action/resource-provider",
    "properties": {
      "model": {
        "group": "apps",
        "version": "v1",
        "kind": "Deployment"
      },
      "provider": { "$codeRef": "actions.useDeploymentActionsProvider" }
    }
  },
  {
    "type": "console.action/resource-provider",
    "properties": {
      "model": {
        "group": "apps.openshift.io",
        "version": "v1",
        "kind": "DeploymentConfig"
      },
      "provider": { "$codeRef": "actions.useDeploymentConfigActionsProvider" }
    }
  },
  {
    "type": "console.action/resource-provider",
    "properties": {
      "model": {
        "group": "apps",
        "version": "v1",
        "kind": "StatefulSet"
      },
      "provider": { "$codeRef": "actions.useStatefulSetActionsProvider" }
    }
  },
  {
    "type": "console.action/resource-provider",
    "properties": {
      "model": {
        "group": "apps",
        "version": "v1",
        "kind": "DaemonSet"
      },
      "provider": { "$codeRef": "actions.useDaemonSetActionsProvider" }
    }
  },
  {
    "type": "console.action/resource-provider",
    "properties": {
      "model": {
        "group": "batch",
        "version": "v1",
        "kind": "Job"
      },
      "provider": { "$codeRef": "actions.useJobActionsProvider" }
    }
  },
  {
    "type": "console.action/resource-provider",
    "properties": {
      "model": {
        "group": "batch",
        "version": "v1beta1",
        "kind": "CronJob"
      },
      "provider": { "$codeRef": "actions.useCronJobActionsProvider" }
    }
  },
  {
    "type": "console.action/resource-provider",
    "properties": {
      "model": {
        "version": "v1",
        "kind": "Pod"
      },
      "provider": { "$codeRef": "actions.useCronJobActionsProvider" }
    }
  },
  {
    "type": "console.user-preference/group",
    "properties": {
      "id": "general",
      "label": "%console-app~General%"
    }
  },
  {
    "type": "console.user-preference/group",
    "properties": {
      "id": "language",
      "label": "%console-app~Language%"
    }
  },
  {
    "type": "console.user-preference/group",
    "properties": {
      "id": "notifications",
      "label": "%console-app~Notifications%"
    }
  },
  {
    "type": "console.user-preference/item",
    "properties": {
      "id": "console.preferredPerspective",
      "label": "%console-app~Perspective%",
      "groupId": "general",
      "description": "%console-app~If a perspective is not selected, the console defaults to the last viewed.%",
      "field": {
        "type": "custom",
        "component": { "$codeRef": "userPreferences.PerspectiveDropdown" }
      }
    }
  },
  {
    "type": "console.user-preference/item",
    "properties": {
      "id": "console.namespace.favorite",
      "label": "%console-app~Project%",
      "groupId": "general",
      "description": "%console-app~If a project is not selected, the console defaults to the last viewed.%",
      "field": {
        "type": "custom",
        "component": { "$codeRef": "userPreferences.NamespaceDropdown" }
      },
      "insertBefore": "topology.preferredView"
    }
  },
  {
    "type": "console.user-preference/item",
    "properties": {
      "id": "console.preferredCreateEditMethod",
      "label": "%console-app~Create/Edit resource method%",
      "groupId": "general",
      "description": "%console-app~If both form and YAML are available, the console defaults to your selection.%",
      "field": {
        "type": "dropdown",
        "userSettingsKey": "console.preferredCreateEditMethod",
        "defaultValue": "latest",
        "options": [
          {
            "value": "latest",
            "label": "%console-app~Last viewed%"
          },
          { "value": "form", "label": "%console-app~Form%" },
          { "value": "yaml", "label": "%console-app~YAML%" }
        ]
      },
      "insertAfter": "topology.preferredView"
    }
  },
  {
    "type": "console.user-preference/item",
    "properties": {
      "id": "console.preferredLanguage",
      "label": "%console-app~Language%",
      "groupId": "language",
      "description": "%console-app~Select the language you want to use for the console.%",
      "field": {
        "type": "custom",
        "component": { "$codeRef": "userPreferences.LanguageDropdown" }
      }
    }
  }
]

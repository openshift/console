// tslint:disable
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1Affinity } from './V1Affinity';
import { V1DomainSpec } from './V1DomainSpec';
import { V1Network } from './V1Network';
import { V1PodDNSConfig } from './V1PodDNSConfig';
import { V1Probe } from './V1Probe';
import { V1Toleration } from './V1Toleration';
import { V1Volume } from './V1Volume';

/**
 * VirtualMachineInstanceSpec is a description of a VirtualMachineInstance.
 * @export
 * @interface V1VirtualMachineInstanceSpec
 */
export interface V1VirtualMachineInstanceSpec {
  /**
   *
   * @type {V1Affinity}
   * @memberof V1VirtualMachineInstanceSpec
   */
  affinity?: V1Affinity;
  /**
   *
   * @type {V1PodDNSConfig}
   * @memberof V1VirtualMachineInstanceSpec
   */
  dnsConfig?: V1PodDNSConfig;
  /**
   * Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are \'ClusterFirstWithHostNet\', \'ClusterFirst\', \'Default\' or \'None\'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to \'ClusterFirstWithHostNet\'. +optional
   * @type {string}
   * @memberof V1VirtualMachineInstanceSpec
   */
  dnsPolicy?: string;
  /**
   *
   * @type {V1DomainSpec}
   * @memberof V1VirtualMachineInstanceSpec
   */
  domain: V1DomainSpec;
  /**
   *
   * @type {object}
   * @memberof V1VirtualMachineInstanceSpec
   */
  evictionStrategy?: object;
  /**
   * Specifies the hostname of the vmi If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly. +optional
   * @type {string}
   * @memberof V1VirtualMachineInstanceSpec
   */
  hostname?: string;
  /**
   *
   * @type {V1Probe}
   * @memberof V1VirtualMachineInstanceSpec
   */
  livenessProbe?: V1Probe;
  /**
   * List of networks that can be attached to a vm\'s virtual interface.
   * @type {Array<V1Network>}
   * @memberof V1VirtualMachineInstanceSpec
   */
  networks?: V1Network[];
  /**
   * NodeSelector is a selector which must be true for the vmi to fit on a node. Selector which must match a node\'s labels for the vmi to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ +optional
   * @type {object}
   * @memberof V1VirtualMachineInstanceSpec
   */
  nodeSelector?: object;
  /**
   *
   * @type {V1Probe}
   * @memberof V1VirtualMachineInstanceSpec
   */
  readinessProbe?: V1Probe;
  /**
   * If specified, the fully qualified vmi hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi, no matter if the vmi itself can pick up a hostname. +optional
   * @type {string}
   * @memberof V1VirtualMachineInstanceSpec
   */
  subdomain?: string;
  /**
   * Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
   * @type {number}
   * @memberof V1VirtualMachineInstanceSpec
   */
  terminationGracePeriodSeconds?: number;
  /**
   * If toleration is specified, obey all the toleration rules.
   * @type {Array<V1Toleration>}
   * @memberof V1VirtualMachineInstanceSpec
   */
  tolerations?: V1Toleration[];
  /**
   * List of volumes that can be mounted by disks belonging to the vmi.
   * @type {Array<V1Volume>}
   * @memberof V1VirtualMachineInstanceSpec
   */
  volumes?: V1Volume[];
}

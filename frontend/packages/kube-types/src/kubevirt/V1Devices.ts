// tslint:disable
/**
 * KubeVirt API
 * This is KubeVirt API an add-on for Kubernetes.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: kubevirt-dev@googlegroups.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1Disk } from './V1Disk';
import { V1Input } from './V1Input';
import { V1Interface } from './V1Interface';
import { V1Watchdog } from './V1Watchdog';

/**
 *
 * @export
 * @interface V1Devices
 */
export interface V1Devices {
  /**
   * Whether to attach the default graphics device or not. VNC will not be available if set to false. Defaults to true.
   * @type {boolean}
   * @memberof V1Devices
   */
  autoattachGraphicsDevice?: boolean;
  /**
   * Whether to attach a pod network interface. Defaults to true.
   * @type {boolean}
   * @memberof V1Devices
   */
  autoattachPodInterface?: boolean;
  /**
   * Whether or not to enable virtio multi-queue for block devices +optional
   * @type {boolean}
   * @memberof V1Devices
   */
  blockMultiQueue?: boolean;
  /**
   * Disks describes disks, cdroms, floppy and luns which are connected to the vmi.
   * @type {Array<V1Disk>}
   * @memberof V1Devices
   */
  disks?: V1Disk[];
  /**
   * Inputs describe input devices
   * @type {Array<V1Input>}
   * @memberof V1Devices
   */
  inputs?: V1Input[];
  /**
   * Interfaces describe network interfaces which are added to the vmi.
   * @type {Array<V1Interface>}
   * @memberof V1Devices
   */
  interfaces?: V1Interface[];
  /**
   * If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature +optional
   * @type {boolean}
   * @memberof V1Devices
   */
  networkInterfaceMultiqueue?: boolean;
  /**
   * Rng represents the random device passed from host
   * @type {object}
   * @memberof V1Devices
   */
  rng?: object;
  /**
   *
   * @type {V1Watchdog}
   * @memberof V1Devices
   */
  watchdog?: V1Watchdog;
}
